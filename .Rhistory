iinstall.packages("ggmap")
install.packages("ggmap")
install.packages("ggplot2")
library(ggmap)
gc <-geocode(enc2utf8("북한산 국립공원"))
gc <- geocode(enc2utf8("북한산 국립공원"))
register_google(key = 'AIzaSyBpRT01Ya703cY6KU8E6OwpMR2L1H7LUMo')
gc <- geocode(enc2utf8("북한산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("북한산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("설악산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("설악산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("오대산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("치악산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("태백산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
gc <- geocode(enc2utf8("태백산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
marker = gc)
ggmap(map)
install.packages("multilinguer")
library(multilinguer)
install_jdk()
install.packages(c("hash", "tau", "Sejong", "RSQLite", "devtools", "bit", "rex", "lazyeval", "htmlwidgets", "crosstalk", "promises", "later", "sessioninfo", "xopen", "bit64", "blob", "DBI", "memoise", "plogr", "covr", "DT", "rcmdcheck", "rversions"), type = "binary")
install.packages("remotes")
remotes::install_github('haven-jeon/KoNLP', upgrade = "never", INSTALL_opts=c("--no-multiarch"))
install.packages("KoLNP")
library(KoLNP)
library(KoLNP)
library(KoLNP)
library(KoLNP)
install.packages("KoNLP")
library(KoNLP)
library(KoLNP)
install.packages("KoNLP")
install.packages("KoNLP")
library(KoNLP)
gc <- geocode(enc2utf8("북한산 국립공원"))
install.packages("ggmap")
install.packages("ggplot2")
library(ggmap)
register_google(key = 'AIzaSyBpRT01Ya703cY6KU8E6OwpMR2L1H7LUMo')
gc <- geocode(enc2utf8("북한산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
zoom=10,
size=c(640,640
marker = gc)
gc <- geocode(enc2utf8("북한산 국립공원"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen,
maptype = "roadmap",
zoom=10,
size=c(640,640),
marker = gc)
ggmap(map)
gmap <- ggmap(map)
gmap+geom_text(data=df,
size=5,
label=df$name)
gmap+geom_text(data=df,
aes(x=lon,y=lat),
size=5,
label=df$name)
df <- data.frame(name=names,
lon=gc$lon,
lat=gc$lat)
gmap <- ggmap(map)
gmap+geom_text(gc,
size=5,
label=df$name)
names <- c("북한산 국립공원","설악산 국립공원","오대산 국립공원","치악산 국립공원","태백산 국립공원")
addr <- c("경기 고양시 덕양구 대서문길 375",
"강원 인제군 북면 한계리",
"강원 홍천군 내면 오대산로 2",
"강원 원주시 소초면 무쇠점2길 26",
"강원 태백시 혈동")
gc <- geocode(enc2utf8(addr))
gc
df <- data.frame(name=names,
lon=gc$lon,
lat=gc$lat)
df
cen <- c(mean(df$lon),mean(df$lat))
map <- get_googlemap(center = cen,
maptype = "roadmap",
zoom=7,
size=c(640,640),
markers=gc)
ggmap(map)
gmap <- ggmap(map)
gmap+geom_text(data=df,
aes(x=lon, y=lat),
size=5,
label=df$name)
txt <- readLines("steve Jobs.txt")
nouns <- sapply(txt,extractNoun,USE.NAMES=F)
n <- unlist(nouns)
nouns <- Filter(function(x) {nchar(x) >= 2} ,n)
write(nouns,"steve_Noun.txt")
rev <- read.table("steve_Noun.txt")
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing=T),30)
library(KoNLP)
install.packages("wordcloud")
library(wordcloud)
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_271")
Sys.setenv(JAVA_HOME="C:/Program Files (x86)\Java\jre1.8.0_271")
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jre1.8.0_271")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
txt <- readLines("steve Jobs.txt", encoding = "UTF-8")
buildDictionary(ext_dic = "woorimalsam")
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
txt <- readLines("steve Jobs.txt", encoding = "UTF-8")
buildDictionary(ext_dic = "woorimalsam")
